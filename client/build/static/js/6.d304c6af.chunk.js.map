{"version":3,"sources":["components/create-profile/CreateProfile.js","../node_modules/classnames/index.js","components/common/TextFieldGroup.js","components/common/TextAreaFieldGroup.js","components/common/InputGroup.js","components/common/SelectListGroup.js"],"names":["CreateProfile","props","state","displaySocialInputs","handle","company","website","location","status","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","errors","onChange","bind","onSubmit","nextProps","this","setState","e","preventDefault","profileData","createProfile","history","target","name","value","socialInputs","placeholder","icon","error","className","info","options","label","type","onClick","prevState","Component","connect","profile","withRouter","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","TextFieldGroup","disabled","classnames","defaultProps","TextAreaFieldGroup","InputGroup","SelectListGroup","selectOptions","map","option"],"mappings":"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","file":"static/js/6.d304c6af.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport TextFieldGroup from '../common/TextFieldGroup';\r\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\r\nimport InputGroup from '../common/InputGroup';\r\nimport SelectListGroup from '../common/SelectListGroup';\r\nimport { createProfile } from '../../actions/profileActions';\r\n\r\nclass CreateProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displaySocialInputs: false,\r\n      handle: '',\r\n      company: '',\r\n      website: '',\r\n      location: '',\r\n      status: '',\r\n      skills: '',\r\n      githubusername: '',\r\n      bio: '',\r\n      twitter: '',\r\n      facebook: '',\r\n      linkedin: '',\r\n      youtube: '',\r\n      instagram: '',\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const profileData = {\r\n      handle: this.state.handle,\r\n      company: this.state.company,\r\n      website: this.state.website,\r\n      location: this.state.location,\r\n      status: this.state.status,\r\n      skills: this.state.skills,\r\n      githubusername: this.state.githubusername,\r\n      bio: this.state.bio,\r\n      twitter: this.state.twitter,\r\n      facebook: this.state.facebook,\r\n      linkedin: this.state.linkedin,\r\n      youtube: this.state.youtube,\r\n      instagram: this.state.instagram\r\n    };\r\n\r\n    this.props.createProfile(profileData, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors, displaySocialInputs } = this.state;\r\n\r\n    let socialInputs;\r\n\r\n    if (displaySocialInputs) {\r\n      socialInputs = (\r\n        <div>\r\n          <InputGroup\r\n            placeholder=\"Twitter Profile URL\"\r\n            name=\"twitter\"\r\n            icon=\"fab fa-twitter\"\r\n            value={this.state.twitter}\r\n            onChange={this.onChange}\r\n            error={errors.twitter}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Facebook Page URL\"\r\n            name=\"facebook\"\r\n            icon=\"fab fa-facebook\"\r\n            value={this.state.facebook}\r\n            onChange={this.onChange}\r\n            error={errors.facebook}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Linkedin Profile URL\"\r\n            name=\"linkedin\"\r\n            icon=\"fab fa-linkedin\"\r\n            value={this.state.linkedin}\r\n            onChange={this.onChange}\r\n            error={errors.linkedin}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"YouTube Channel URL\"\r\n            name=\"youtube\"\r\n            icon=\"fab fa-youtube\"\r\n            value={this.state.youtube}\r\n            onChange={this.onChange}\r\n            error={errors.youtube}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Instagram Page URL\"\r\n            name=\"instagram\"\r\n            icon=\"fab fa-instagram\"\r\n            value={this.state.instagram}\r\n            onChange={this.onChange}\r\n            error={errors.instagram}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Select options for status\r\n    const options = [\r\n      { label: '* Select Professional Status', value: 0 },\r\n      { label: 'Developer', value: 'Developer' },\r\n      { label: 'Junior Developer', value: 'Junior Developer' },\r\n      { label: 'Senior Developer', value: 'Senior Developer' },\r\n      { label: 'Manager', value: 'Manager' },\r\n      { label: 'Student or Learning', value: 'Student or Learning' },\r\n      { label: 'Instructor or Teacher', value: 'Instructor or Teacher' },\r\n      { label: 'Intern', value: 'Intern' },\r\n      { label: 'Other', value: 'Other' }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"create-profile\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Create Your Profile</h1>\r\n              <p className=\"lead text-center\">\r\n                Let's get some information to make your profile stand out\r\n              </p>\r\n              <small className=\"d-block pb-3\">* = required fields</small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"* Profile Handle\"\r\n                  name=\"handle\"\r\n                  value={this.state.handle}\r\n                  onChange={this.onChange}\r\n                  error={errors.handle}\r\n                  info=\"A unique handle for your profile URL. Your full name, company name, nickname\"\r\n                />\r\n                <SelectListGroup\r\n                  placeholder=\"Status\"\r\n                  name=\"status\"\r\n                  value={this.state.status}\r\n                  onChange={this.onChange}\r\n                  options={options}\r\n                  error={errors.status}\r\n                  info=\"Give us an idea of where you are at in your career\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Company\"\r\n                  name=\"company\"\r\n                  value={this.state.company}\r\n                  onChange={this.onChange}\r\n                  error={errors.company}\r\n                  info=\"Could be your own company or one you work for\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Website\"\r\n                  name=\"website\"\r\n                  value={this.state.website}\r\n                  onChange={this.onChange}\r\n                  error={errors.website}\r\n                  info=\"Could be your own website or a company one\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Location\"\r\n                  name=\"location\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChange}\r\n                  error={errors.location}\r\n                  info=\"City or city & state suggested (eg. Boston, MA)\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"* Skills\"\r\n                  name=\"skills\"\r\n                  value={this.state.skills}\r\n                  onChange={this.onChange}\r\n                  error={errors.skills}\r\n                  info=\"Please use comma separated values (eg.\r\n                    HTML,CSS,JavaScript,PHP\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Github Username\"\r\n                  name=\"githubusername\"\r\n                  value={this.state.githubusername}\r\n                  onChange={this.onChange}\r\n                  error={errors.githubusername}\r\n                  info=\"If you want your latest repos and a Github link, include your username\"\r\n                />\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"Short Bio\"\r\n                  name=\"bio\"\r\n                  value={this.state.bio}\r\n                  onChange={this.onChange}\r\n                  error={errors.bio}\r\n                  info=\"Tell us a little about yourself\"\r\n                />\r\n\r\n                <div className=\"mb-3\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      this.setState(prevState => ({\r\n                        displaySocialInputs: !prevState.displaySocialInputs\r\n                      }));\r\n                    }}\r\n                    className=\"btn btn-light\"\r\n                  >\r\n                    Add Social Network Links\r\n                  </button>\r\n                  <span className=\"text-muted\">Optional</span>\r\n                </div>\r\n                {socialInputs}\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile })(\r\n  withRouter(CreateProfile)\r\n);\r\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  label,\r\n  error,\r\n  info,\r\n  type,\r\n  onChange,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.string\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextFieldGroup;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextAreaFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  info,\r\n  onChange\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextAreaFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TextAreaFieldGroup;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InputGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  icon,\r\n  type,\r\n  onChange\r\n}) => {\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\">\r\n          <i className={icon} />\r\n        </span>\r\n      </div>\r\n      <input\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default InputGroup;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SelectListGroup = ({ name, value, error, info, onChange, options }) => {\r\n  const selectOptions = options.map(option => (\r\n    <option key={option.label} value={option.value}>\r\n      {option.label}\r\n    </option>\r\n  ));\r\n  return (\r\n    <div className=\"form-group\">\r\n      <select\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      >\r\n        {selectOptions}\r\n      </select>\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectListGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  options: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SelectListGroup;\r\n"],"sourceRoot":""}