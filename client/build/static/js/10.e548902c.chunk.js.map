{"version":3,"sources":["components/auth/Login.js","../node_modules/classnames/index.js","components/common/TextFieldGroup.js"],"names":["Login","state","email","password","errors","onChange","bind","onSubmit","this","props","auth","isAuthenticated","history","push","nextProps","setState","e","preventDefault","userData","loginUser","target","name","value","className","placeholder","type","error","Component","connect","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","Array","isArray","inner","apply","key","call","join","module","exports","default","TextFieldGroup","label","info","disabled","classnames","defaultProps"],"mappings":";8MAMMA,E,YACJ,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVC,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBATJ,E,iFAaRE,KAAKC,MAAMC,KAAKC,iBAClBH,KAAKC,MAAMG,QAAQC,KAAK,gB,gDAIFC,GACpBA,EAAUJ,KAAKC,iBACjBH,KAAKC,MAAMG,QAAQC,KAAK,cAGtBC,EAAUV,QACZI,KAAKO,SAAS,CAAEX,OAAQU,EAAUV,W,+BAI7BY,GACPA,EAAEC,iBAEF,IAAMC,EAAW,CACfhB,MAAOM,KAAKP,MAAMC,MAClBC,SAAUK,KAAKP,MAAME,UAGvBK,KAAKC,MAAMU,UAAUD,K,+BAGdF,GACPR,KAAKO,SAAL,eAAiBC,EAAEI,OAAOC,KAAOL,EAAEI,OAAOE,U,+BAGlC,IACAlB,EAAWI,KAAKP,MAAhBG,OAER,OACE,yBAAKmB,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,UACA,uBAAGA,UAAU,oBAAb,wCAGA,0BAAMhB,SAAUC,KAAKD,UACnB,kBAAC,IAAD,CACEiB,YAAY,gBACZH,KAAK,QACLI,KAAK,QACLH,MAAOd,KAAKP,MAAMC,MAClBG,SAAUG,KAAKH,SACfqB,MAAOtB,EAAOF,QAGhB,kBAAC,IAAD,CACEsB,YAAY,WACZH,KAAK,WACLI,KAAK,WACLH,MAAOd,KAAKP,MAAME,SAClBE,SAAUG,KAAKH,SACfqB,MAAOtB,EAAOD,WAEhB,2BAAOsB,KAAK,SAASF,UAAU,yC,GA1E3BI,aA+FLC,uBALS,SAAA3B,GAAK,MAAK,CAChCS,KAAMT,EAAMS,KACZN,OAAQH,EAAMG,UAGwB,CAAEe,eAA3BS,CAAwC5B,I,mBCrGvD,OAOC,WACA,aAEA,IAAI6B,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQnB,KAAKuB,QACP,GAAIE,MAAMC,QAAQH,IAAQA,EAAID,OAAQ,CAC5C,IAAIK,EAAQT,EAAWU,MAAM,KAAML,GAC/BI,GACHR,EAAQnB,KAAK2B,QAER,GAAgB,WAAZH,EACV,IAAK,IAAIK,KAAON,EACXP,EAAOc,KAAKP,EAAKM,IAAQN,EAAIM,IAChCV,EAAQnB,KAAK6B,IAMjB,OAAOV,EAAQY,KAAK,KAGgBC,EAAOC,SAC3Cf,EAAWgB,QAAUhB,EACrBc,EAAOC,QAAUf,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aAtCP,I,gCCPD,qCAIMiB,EAAiB,SAAC,GAUjB,IATL3B,EASI,EATJA,KACAG,EAQI,EARJA,YACAF,EAOI,EAPJA,MAEAI,GAKI,EANJuB,MAMI,EALJvB,OACAwB,EAII,EAJJA,KACAzB,EAGI,EAHJA,KACApB,EAEI,EAFJA,SACA8C,EACI,EADJA,SAEA,OACE,yBAAK5B,UAAU,cACb,2BACEE,KAAMA,EACNF,UAAW6B,IAAW,+BAAgC,CACpD,aAAc1B,IAEhBF,YAAaA,EACbH,KAAMA,EACNC,MAAOA,EACPjB,SAAUA,EACV8C,SAAUA,IAEXD,GAAQ,2BAAO3B,UAAU,wBAAwB2B,GACjDxB,GAAS,yBAAKH,UAAU,oBAAoBG,KAgBnDsB,EAAeK,aAAe,CAC5B5B,KAAM,QAGOuB","file":"static/js/10.e548902c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.loginUser(userData);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <p className=\"lead text-center\">\r\n                Sign in to your DevConnector account\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"Email Address\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                  error={errors.password}\r\n                />\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  label,\r\n  error,\r\n  info,\r\n  type,\r\n  onChange,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.string\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextFieldGroup;\r\n"],"sourceRoot":""}