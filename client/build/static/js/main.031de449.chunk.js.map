{"version":3,"sources":["actions/types.js","utils/setAuthToken.js","actions/authActions.js","actions/profileActions.js","validation/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/profileReducer.js","reducers/postReducer.js","reducers/index.js","store.js","components/common/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","CLEAR_ERRORS","SET_CURRENT_USER","GET_PROFILE","PROFILE_LOADING","CLEAR_CURRENT_PROFILE","GET_PROFILES","POST_LOADING","GET_POSTS","GET_POST","ADD_POST","DELETE_POST","setAuthToken","token","axios","defaults","headers","common","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","localStorage","setItem","decoded","jwt_decode","setCurrentUser","logoutUser","removeItem","getCurrentProfile","setProfileLoading","get","getProfileByHandle","handle","createProfile","profileData","addExperience","expData","addEducation","eduData","deleteExperience","id","delete","deleteEducation","getProfiles","deleteAccount","window","confirm","clearCurrentProfile","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","isAdmin","user","profile","profiles","loading","posts","combineReducers","auth","state","action","is_admin","errors","filter","_id","middleware","thunk","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","rootReducer","connect","Component","component","rest","render","props","to","Navbar","React","lazy","Footer","Landing","Register","Login","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Profiles","Profile","Posts","Post","NotFound","jwtToken","currentTime","Date","now","exp","location","href","App","Suspense","fallback","className","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gGAAA,wZAAO,IAAMA,EAAa,aACbC,EAAe,eACfC,EAAmB,mBACnBC,EAAc,cACdC,EAAkB,kBAElBC,EAAwB,wBACxBC,EAAe,eACfC,EAAe,eACfC,EAAY,YACZC,EAAW,WACXC,EAAW,WACXC,EAAc,e,gCCZ3B,oBAYeC,IAVM,SAAAC,GACfA,EAEFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,gB,gCCRX,4LAOaC,EAAe,SAACC,EAAUC,GAAX,OAAuB,SAAAC,GACjDP,IACGQ,KAAK,sBAAuBH,GAC5BI,MAAK,SAAAC,GAAG,OAAIJ,EAAQK,KAAK,aACzBC,OAAM,SAAAC,GAAG,OACRN,EAAS,CACPO,KAAM5B,IACN6B,QAASF,EAAIG,SAASC,YAMjBC,EAAY,SAAAb,GAAQ,OAAI,SAAAE,GACnCP,IACGQ,KAAK,mBAAoBH,GACzBI,MAAK,SAAAC,GAAO,IAEHX,EAAUW,EAAIO,KAAdlB,MAERoB,aAAaC,QAAQ,WAAYrB,GAEjCD,YAAaC,GAEb,IAAMsB,EAAUC,IAAWvB,GAE3BQ,EAASgB,EAAeF,OAEzBT,OAAM,SAAAC,GAAG,OACRN,EAAS,CACPO,KAAM5B,IACN6B,QAASF,EAAIG,SAASC,YAMjBM,EAAiB,SAAAF,GAC5B,MAAO,CACLP,KAAM1B,IACN2B,QAASM,IAKAG,EAAa,kBAAM,SAAAjB,GAE9BY,aAAaM,WAAW,YAExB3B,aAAa,GAEbS,EAASgB,EAAe,Q,gCC1D1B,+WAYaG,EAAoB,kBAAM,SAAAnB,GACrCA,EAASoB,KACT3B,IACG4B,IAAI,gBACJnB,MAAK,SAAAC,GAAG,OACPH,EAAS,CACPO,KAAMzB,IACN0B,QAASL,EAAIO,SAEfV,EAAS,CACPO,KAAM5B,IACN6B,QAAS,MAGZH,OACC,SAAAC,GAAG,OACDN,EAAS,CACPO,KAAMzB,IACN0B,QAAS,UAMNc,EAAqB,SAAAC,GAAM,OAAI,SAAAvB,GAC1CA,EAASoB,KACT3B,IACG4B,IADH,8BAC8BE,IAC3BrB,MAAK,SAAAC,GAAG,OACPH,EAAS,CACPO,KAAMzB,IACN0B,QAASL,EAAIO,UAGhBL,OAAM,SAAAC,GAAG,OACRN,EAAS,CACPO,KAAMzB,IACN0B,QAAS,YAMJgB,EAAgB,SAACC,EAAa1B,GAAd,OAA0B,SAAAC,GACrDP,IACGQ,KAAK,eAAgBwB,GACrBvB,MAAK,SAAAC,GAAG,OAAIJ,EAAQK,KAAK,iBACzBC,OAAM,SAAAC,GAAG,OACRN,EAAS,CACPO,KAAM5B,IACN6B,QAASF,EAAIG,SAASC,YAMjBgB,EAAgB,SAACC,EAAS5B,GAAV,OAAsB,SAAAC,GACjDP,IACGQ,KAAK,0BAA2B0B,GAChCzB,MAAK,SAAAC,GAAG,OAAIJ,EAAQK,KAAK,iBACzBC,OAAM,SAAAC,GAAG,OACRN,EAAS,CACPO,KAAM5B,IACN6B,QAASF,EAAIG,SAASC,YAMjBkB,EAAe,SAACC,EAAS9B,GAAV,OAAsB,SAAAC,GAChDP,IACGQ,KAAK,yBAA0B4B,GAC/B3B,MAAK,SAAAC,GAAG,OAAIJ,EAAQK,KAAK,iBACzBC,OAAM,SAAAC,GAAG,OACRN,EAAS,CACPO,KAAM5B,IACN6B,QAASF,EAAIG,SAASC,YAMjBoB,EAAmB,SAAAC,GAAE,OAAI,SAAA/B,GACpCP,IACGuC,OADH,kCACqCD,IAClC7B,MAAK,SAAAC,GAAG,OACPH,EAAS,CACPO,KAAMzB,IACN0B,QAASL,EAAIO,UAGhBL,OAAM,SAAAC,GAAG,OACRN,EAAS,CACPO,KAAM5B,IACN6B,QAASF,EAAIG,SAASC,YAMjBuB,EAAkB,SAAAF,GAAE,OAAI,SAAA/B,GACnCP,IACGuC,OADH,iCACoCD,IACjC7B,MAAK,SAAAC,GAAG,OACPH,EAAS,CACPO,KAAMzB,IACN0B,QAASL,EAAIO,UAGhBL,OAAM,SAAAC,GAAG,OACRN,EAAS,CACPO,KAAM5B,IACN6B,QAASF,EAAIG,SAASC,YAMjBwB,EAAc,kBAAM,SAAAlC,GAC/BA,EAASoB,KACT3B,IACG4B,IAAI,oBACJnB,MAAK,SAAAC,GAAG,OACPH,EAAS,CACPO,KAAMtB,IACNuB,QAASL,EAAIO,UAGhBL,OAAM,SAAAC,GAAG,OACRN,EAAS,CACPO,KAAMtB,IACNuB,QAAS,YAMJ2B,EAAgB,kBAAM,SAAAnC,GAC7BoC,OAAOC,QAAQ,0CACjB5C,IACGuC,OAAO,gBACP9B,MAAK,SAAAC,GAAG,OACPH,EAAS,CACPO,KAAM1B,IACN2B,QAAS,QAGZH,OAAM,SAAAC,GAAG,OACRN,EAAS,CACPO,KAAM5B,IACN6B,QAASF,EAAIG,SAASC,YAOnBU,EAAoB,WAC/B,MAAO,CACLb,KAAMxB,MAKGuD,EAAsB,WACjC,MAAO,CACL/B,KAAMvB,O,gCC5KKuD,IANC,SAAAC,GAAK,YACTC,IAAVD,GACU,OAAVA,GACkB,kBAAVA,GAAoD,IAA9BE,OAAOC,KAAKH,GAAOI,QAC/B,kBAAVJ,GAA8C,IAAxBA,EAAMK,OAAOD,S,iTCAvCE,EAAe,CACnBC,iBAAiB,EACjBC,SAAS,EACTC,KAAM,ICLFH,EAAe,GCKfA,EAAe,CACnBI,QAAS,KACTC,SAAU,KACVC,SAAS,G,QCFLN,EAAe,CACnBO,MAAO,GACPpD,KAAM,GACNmD,SAAS,GCLIE,cAAgB,CAC7BC,KJGa,WAAwC,IAA/BC,EAA8B,uDAAtBV,EAAcW,EAAQ,uCACpD,OAAQA,EAAOlD,MACb,KAAK1B,IACH,OAAO,eACF2E,EADL,CAEET,iBAAkBR,YAAQkB,EAAOjD,SACjCwC,QAASS,EAAOjD,QAAQkD,SACxBT,KAAMQ,EAAOjD,UAEjB,QACE,OAAOgD,IIZXG,OHJa,WAAwC,IAA/BH,EAA8B,uDAAtBV,EAAcW,EAAQ,uCACpD,OAAQA,EAAOlD,MACb,KAAK5B,IACH,OAAO8E,EAAOjD,QAChB,KAAK5B,IACH,MAAO,GACT,QACE,OAAO4E,IGFXN,QFIa,WAAwC,IAA/BM,EAA8B,uDAAtBV,EAAcW,EAAQ,uCACpD,OAAQA,EAAOlD,MACb,KAAKxB,IACH,OAAO,eACFyE,EADL,CAEEJ,SAAS,IAEb,KAAKtE,IACH,OAAO,eACF0E,EADL,CAEEN,QAASO,EAAOjD,QAChB4C,SAAS,IAEb,KAAKnE,IACH,OAAO,eACFuE,EADL,CAEEL,SAAUM,EAAOjD,QACjB4C,SAAS,IAEb,KAAKpE,IACH,OAAO,eACFwE,EADL,CAEEN,QAAS,OAEb,QACE,OAAOM,IE5BXvD,KDIa,WAAwC,IAA/BuD,EAA8B,uDAAtBV,EAAcW,EAAQ,uCACpD,OAAQA,EAAOlD,MACb,KAAKrB,IACH,OAAO,eACFsE,EADL,CAEEJ,SAAS,IAEb,KAAKjE,IACH,OAAO,eACFqE,EADL,CAEEH,MAAOI,EAAOjD,QACd4C,SAAS,IAEb,KAAKhE,IACH,OAAO,eACFoE,EADL,CAEEvD,KAAMwD,EAAOjD,QACb4C,SAAS,IAEb,KAAK/D,IACH,OAAO,eACFmE,EADL,CAEEH,MAAM,CAAEI,EAAOjD,SAAV,mBAAsBgD,EAAMH,UAErC,KAAK/D,IACH,OAAO,eACFkE,EADL,CAEEH,MAAOG,EAAMH,MAAMO,QAAO,SAAA3D,GAAI,OAAIA,EAAK4D,MAAQJ,EAAOjD,aAE1D,QACE,OAAOgD,MEtCPM,EAAa,CAACC,KASdC,GANc,kBAAX5B,QAAuBA,OAAO6B,qCACjC7B,OAAO6B,qCAAqC,IAG5CC,KAGJC,IAAe,WAAf,EAAmBL,IAKNM,EAFDC,YAAYC,EAfL,GAegCN,G,QCOtCO,eAJS,SAAAf,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAGCgB,EArBM,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAsBlB,EAAzB,EAAyBA,KAASmB,EAAlC,2CACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAC,GAAK,OACc,IAAzBrB,EAAKR,gBACH,kBAACyB,EAAcI,GAEf,kBAAC,IAAD,CAAUC,GAAG,kBCkBfC,G,kBAASC,IAAMC,MAAK,kBAAM,kCAC1BC,EAASF,IAAMC,MAAK,kBAAM,iCAC1BE,EAAUH,IAAMC,MAAK,kBACzB,iCAGIG,EAAWJ,IAAMC,MAAK,kBAC1B,iCAEII,EAAQL,IAAMC,MAAK,kBAAM,kCACzBK,EAAYN,IAAMC,MAAK,kBAC3B,wDAEIM,EAAgBP,IAAMC,MAAK,kBAC/B,iCAEIO,EAAcR,IAAMC,MAAK,kBAC7B,iCAEIQ,EAAgBT,IAAMC,MAAK,kBAC/B,iCAEIS,EAAeV,IAAMC,MAAK,kBAC9B,iCAEIU,EAAWX,IAAMC,MAAK,kBAC1B,kCAEIW,EAAUZ,IAAMC,MAAK,kBACzB,wDAEIY,EAAQb,IAAMC,MAAK,kBAAM,iCACzBa,EAAOd,IAAMC,MAAK,kBAAM,iCACxBc,EAAWf,IAAMC,MAAK,kBAC1B,kCAKF,GAAIpE,aAAamF,SAAU,CAEzBxG,YAAaqB,aAAamF,UAE1B,IAAMjF,EAAUC,IAAWH,aAAamF,UAExC3B,EAAMpE,SAASgB,YAAeF,IAG9B,IAAMkF,EAAcC,KAAKC,MAAQ,IAC7BpF,EAAQqF,IAAMH,IAEhB5B,EAAMpE,SAASiB,eAEfmD,EAAMpE,SAASsC,eAEfF,OAAOgE,SAASC,KAAO,U,IAuEZC,E,iLAjEX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAMC,SAAP,CAAgBC,SAvEtB,yBAAKC,UAAU,oCAAf,eAwEQ,kBAAC,IAAD,CAAUrC,MAAOA,GACf,kBAAC,IAAD,KACE,yBAAKqC,UAAU,OACb,kBAAC3B,EAAD,MACA,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,IAAIlC,UAAWS,IACjC,yBAAKuB,UAAU,aACb,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,YAAYlC,UAAWU,IACzC,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,SAASlC,UAAWW,IACtC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,YAAYlC,UAAWiB,IACzC,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,mBAAmBlC,UAAWkB,IAChD,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEe,OAAK,EACLC,KAAK,aACLlC,UAAWY,KAGf,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEqB,OAAK,EACLC,KAAK,kBACLlC,UAAWa,KAGf,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEoB,OAAK,EACLC,KAAK,gBACLlC,UAAWc,KAGf,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEmB,OAAK,EACLC,KAAK,kBACLlC,UAAWe,KAGf,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEkB,OAAK,EACLC,KAAK,iBACLlC,UAAWgB,KAGf,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAciB,OAAK,EAACC,KAAK,QAAQlC,UAAWmB,KAE9C,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAcc,OAAK,EAACC,KAAK,YAAYlC,UAAWoB,KAElD,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,aAAalC,UAAWqB,KAE5C,kBAACb,EAAD,e,GA1DET,aC7EEoC,QACW,cAA7BxE,OAAOgE,SAASS,UAEe,UAA7BzE,OAAOgE,SAASS,UAEhBzE,OAAOgE,SAASS,SAASC,MACvB,2DCZNC,IAASpC,OAAO,kBAAC,EAAD,MAASqC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlH,MAAK,SAAAmH,GACjCA,EAAaC,kB","file":"static/js/main.031de449.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const PROFILE_LOADING = \"PROFILE_LOADING\";\r\nexport const PROFILE_NOT_FOUND = \"PROFILE_NOT_FOUND\";\r\nexport const CLEAR_CURRENT_PROFILE = \"CLEAR_CURRENT_PROFILE\";\r\nexport const GET_PROFILES = \"GET_PROFILES\";\r\nexport const POST_LOADING = \"POST_LOADING\";\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POST = \"GET_POST\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - Get User Token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      const { token } = res.data;\r\n      // Set token to ls\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from localStorage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_LOADING,\r\n  CLEAR_CURRENT_PROFILE,\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER\r\n} from \"./types\";\r\n\r\n// Get current profile\r\nexport const getCurrentProfile = () => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get(\"/api/profile\")\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      }),\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {}\r\n      })\r\n    )\r\n    .catch(\r\n      err =>\r\n        dispatch({\r\n          type: GET_PROFILE,\r\n          payload: {}\r\n        })\r\n    );\r\n};\r\n\r\n// Get profile by handle\r\nexport const getProfileByHandle = handle => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get(`/api/profile/handle/${handle}`)\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: null\r\n      })\r\n    );\r\n};\r\n\r\n// Create Profile\r\nexport const createProfile = (profileData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/profile\", profileData)\r\n    .then(res => history.push(\"/dashboard\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Add experience\r\nexport const addExperience = (expData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/profile/experience\", expData)\r\n    .then(res => history.push(\"/dashboard\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Add education\r\nexport const addEducation = (eduData, history) => dispatch => {\r\n  axios\r\n    .post(\"/api/profile/education\", eduData)\r\n    .then(res => history.push(\"/dashboard\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Delete Experience\r\nexport const deleteExperience = id => dispatch => {\r\n  axios\r\n    .delete(`/api/profile/experience/${id}`)\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Delete Education\r\nexport const deleteEducation = id => dispatch => {\r\n  axios\r\n    .delete(`/api/profile/education/${id}`)\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get(\"/api/profile/all\")\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILES,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILES,\r\n        payload: null\r\n      })\r\n    );\r\n};\r\n\r\n// Delete account & profile\r\nexport const deleteAccount = () => dispatch => {\r\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\r\n    axios\r\n      .delete(\"/api/profile\")\r\n      .then(res =>\r\n        dispatch({\r\n          type: SET_CURRENT_USER,\r\n          payload: {}\r\n        })\r\n      )\r\n      .catch(err =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        })\r\n      );\r\n  }\r\n};\r\n\r\n// Profile loading\r\nexport const setProfileLoading = () => {\r\n  return {\r\n    type: PROFILE_LOADING\r\n  };\r\n};\r\n\r\n// Clear profile\r\nexport const clearCurrentProfile = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_PROFILE\r\n  };\r\n};\r\n","const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\n  (typeof value === \"string\" && value.trim().length === 0);\n\nexport default isEmpty;\n","import isEmpty from \"../validation/is-empty\";\r\n\r\nimport { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  isAdmin: false,\r\n  user: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        isAdmin: action.payload.is_admin,\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    case CLEAR_ERRORS:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_LOADING,\r\n  CLEAR_CURRENT_PROFILE\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: null,\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case PROFILE_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: action.payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_CURRENT_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_POST,\r\n  GET_POSTS,\r\n  GET_POST,\r\n  DELETE_POST,\r\n  POST_LOADING\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case POST_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [action.payload, ...state.posts]\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post._id !== action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\nimport profileReducer from './profileReducer';\r\nimport postReducer from './postReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  profile: profileReducer,\r\n  post: postReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(...middleware)\n  // other store enhancers if any\n);\nconst store = createStore(rootReducer, initialState, enhancer);\n\nexport default store;\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  HashRouter\n} from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\n\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { clearCurrentProfile } from \"./actions/profileActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nconst loading = () => (\n  <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>\n);\n\n// get layout admin\n\n//get layout front\n\n// Containers\nconst Navbar = React.lazy(() => import(\"./components/layout/Navbar\"));\nconst Footer = React.lazy(() => import(\"./components/layout/Footer\"));\nconst Landing = React.lazy(() =>\n  import(\"./components/layout/Landing\")\n);\n\nconst Register = React.lazy(() =>\n  import(\"./components/auth/Register\")\n);\nconst Login = React.lazy(() => import(\"./components/auth/Login\"));\nconst Dashboard = React.lazy(() =>\n  import(\"./components/dashboard/Dashboard\")\n);\nconst CreateProfile = React.lazy(() =>\n  import(\"./components/create-profile/CreateProfile\")\n);\nconst EditProfile = React.lazy(() =>\n  import(\"./components/edit-profile/EditProfile\")\n);\nconst AddExperience = React.lazy(() =>\n  import(\"./components/add-credentials/AddExperience\")\n);\nconst AddEducation = React.lazy(() =>\n  import(\"./components/add-credentials/AddEducation\")\n);\nconst Profiles = React.lazy(() =>\n  import(\"./components/profiles/Profiles\")\n);\nconst Profile = React.lazy(() =>\n  import(\"./components/profile/Profile\")\n);\nconst Posts = React.lazy(() => import(\"./components/posts/Posts\"));\nconst Post = React.lazy(() => import(\"./components/post/Post\"));\nconst NotFound = React.lazy(() =>\n  import(\"./components/not-found/NotFound\")\n);\n\n\n// Check for token\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Clear current Profile\n    store.dispatch(clearCurrentProfile());\n    // Redirect to login\n    window.location.href = \"/login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <React.Suspense fallback={loading()}>\n          <Provider store={store}>\n            <Router>\n              <div className=\"App\">\n                <Navbar />\n                <Route exact path=\"/\" component={Landing} />\n                <div className=\"container\">\n                  <Route exact path=\"/register\" component={Register} />\n                  <Route exact path=\"/login\" component={Login} />\n                  <Route exact path=\"/profiles\" component={Profiles} />\n                  <Route exact path=\"/profile/:handle\" component={Profile} />\n                  <Switch>\n                    <PrivateRoute\n                      exact\n                      path=\"/dashboard\"\n                      component={Dashboard}\n                    />\n                  </Switch>\n                  <Switch>\n                    <PrivateRoute\n                      exact\n                      path=\"/create-profile\"\n                      component={CreateProfile}\n                    />\n                  </Switch>\n                  <Switch>\n                    <PrivateRoute\n                      exact\n                      path=\"/edit-profile\"\n                      component={EditProfile}\n                    />\n                  </Switch>\n                  <Switch>\n                    <PrivateRoute\n                      exact\n                      path=\"/add-experience\"\n                      component={AddExperience}\n                    />\n                  </Switch>\n                  <Switch>\n                    <PrivateRoute\n                      exact\n                      path=\"/add-education\"\n                      component={AddEducation}\n                    />\n                  </Switch>\n                  <Switch>\n                    <PrivateRoute exact path=\"/feed\" component={Posts} />\n                  </Switch>\n                  <Switch>\n                    <PrivateRoute exact path=\"/post/:id\" component={Post} />\n                  </Switch>\n                  <Route exact path=\"/not-found\" component={NotFound} />\n                </div>\n                <Footer />\n              </div>\n            </Router>\n          </Provider>\n        </React.Suspense>\n      </HashRouter>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}