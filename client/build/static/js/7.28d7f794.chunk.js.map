{"version":3,"sources":["components/edit-profile/EditProfile.js","../node_modules/classnames/index.js","components/common/TextFieldGroup.js","components/common/TextAreaFieldGroup.js","components/common/InputGroup.js","components/common/SelectListGroup.js"],"names":["CreateProfile","props","state","displaySocialInputs","handle","company","website","location","status","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","errors","onChange","bind","onSubmit","this","getCurrentProfile","nextProps","setState","profile","skillsCSV","join","isEmpty","social","e","preventDefault","profileData","createProfile","history","target","name","value","socialInputs","placeholder","icon","error","className","to","info","options","label","type","onClick","prevState","Component","connect","withRouter","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","module","exports","default","TextFieldGroup","disabled","classnames","defaultProps","TextAreaFieldGroup","InputGroup","SelectListGroup","selectOptions","map","option"],"mappings":"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","file":"static/js/7.28d7f794.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport TextFieldGroup from '../common/TextFieldGroup';\r\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\r\nimport InputGroup from '../common/InputGroup';\r\nimport SelectListGroup from '../common/SelectListGroup';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profileActions';\r\nimport isEmpty from '../../validation/is-empty';\r\n\r\nclass CreateProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displaySocialInputs: false,\r\n      handle: '',\r\n      company: '',\r\n      website: '',\r\n      location: '',\r\n      status: '',\r\n      skills: '',\r\n      githubusername: '',\r\n      bio: '',\r\n      twitter: '',\r\n      facebook: '',\r\n      linkedin: '',\r\n      youtube: '',\r\n      instagram: '',\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getCurrentProfile();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    if (nextProps.profile.profile) {\r\n      const profile = nextProps.profile.profile;\r\n\r\n      // Bring skills array back to CSV\r\n      const skillsCSV = profile.skills.join(',');\r\n\r\n      // If profile field doesnt exist, make empty string\r\n      profile.company = !isEmpty(profile.company) ? profile.company : '';\r\n      profile.website = !isEmpty(profile.website) ? profile.website : '';\r\n      profile.location = !isEmpty(profile.location) ? profile.location : '';\r\n      profile.githubusername = !isEmpty(profile.githubusername)\r\n        ? profile.githubusername\r\n        : '';\r\n      profile.bio = !isEmpty(profile.bio) ? profile.bio : '';\r\n      profile.social = !isEmpty(profile.social) ? profile.social : {};\r\n      profile.twitter = !isEmpty(profile.social.twitter)\r\n        ? profile.social.twitter\r\n        : '';\r\n      profile.facebook = !isEmpty(profile.social.facebook)\r\n        ? profile.social.facebook\r\n        : '';\r\n      profile.linkedin = !isEmpty(profile.social.linkedin)\r\n        ? profile.social.linkedin\r\n        : '';\r\n      profile.youtube = !isEmpty(profile.social.youtube)\r\n        ? profile.social.youtube\r\n        : '';\r\n      profile.instagram = !isEmpty(profile.social.instagram)\r\n        ? profile.social.instagram\r\n        : '';\r\n\r\n      // Set component fields state\r\n      this.setState({\r\n        handle: profile.handle,\r\n        company: profile.company,\r\n        website: profile.website,\r\n        location: profile.location,\r\n        status: profile.status,\r\n        skills: skillsCSV,\r\n        githubusername: profile.githubusername,\r\n        bio: profile.bio,\r\n        twitter: profile.twitter,\r\n        facebook: profile.facebook,\r\n        linkedin: profile.linkedin,\r\n        youtube: profile.youtube,\r\n        instagram: profile.instagram\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const profileData = {\r\n      handle: this.state.handle,\r\n      company: this.state.company,\r\n      website: this.state.website,\r\n      location: this.state.location,\r\n      status: this.state.status,\r\n      skills: this.state.skills,\r\n      githubusername: this.state.githubusername,\r\n      bio: this.state.bio,\r\n      twitter: this.state.twitter,\r\n      facebook: this.state.facebook,\r\n      linkedin: this.state.linkedin,\r\n      youtube: this.state.youtube,\r\n      instagram: this.state.instagram\r\n    };\r\n\r\n    this.props.createProfile(profileData, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors, displaySocialInputs } = this.state;\r\n\r\n    let socialInputs;\r\n\r\n    if (displaySocialInputs) {\r\n      socialInputs = (\r\n        <div>\r\n          <InputGroup\r\n            placeholder=\"Twitter Profile URL\"\r\n            name=\"twitter\"\r\n            icon=\"fab fa-twitter\"\r\n            value={this.state.twitter}\r\n            onChange={this.onChange}\r\n            error={errors.twitter}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Facebook Page URL\"\r\n            name=\"facebook\"\r\n            icon=\"fab fa-facebook\"\r\n            value={this.state.facebook}\r\n            onChange={this.onChange}\r\n            error={errors.facebook}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Linkedin Profile URL\"\r\n            name=\"linkedin\"\r\n            icon=\"fab fa-linkedin\"\r\n            value={this.state.linkedin}\r\n            onChange={this.onChange}\r\n            error={errors.linkedin}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"YouTube Channel URL\"\r\n            name=\"youtube\"\r\n            icon=\"fab fa-youtube\"\r\n            value={this.state.youtube}\r\n            onChange={this.onChange}\r\n            error={errors.youtube}\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Instagram Page URL\"\r\n            name=\"instagram\"\r\n            icon=\"fab fa-instagram\"\r\n            value={this.state.instagram}\r\n            onChange={this.onChange}\r\n            error={errors.instagram}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Select options for status\r\n    const options = [\r\n      { label: '* Select Professional Status', value: 0 },\r\n      { label: 'Developer', value: 'Developer' },\r\n      { label: 'Junior Developer', value: 'Junior Developer' },\r\n      { label: 'Senior Developer', value: 'Senior Developer' },\r\n      { label: 'Manager', value: 'Manager' },\r\n      { label: 'Student or Learning', value: 'Student or Learning' },\r\n      { label: 'Instructor or Teacher', value: 'Instructor or Teacher' },\r\n      { label: 'Intern', value: 'Intern' },\r\n      { label: 'Other', value: 'Other' }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"create-profile\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/dashboard\" className=\"btn btn-light\">\r\n                Go Back\r\n              </Link>\r\n              <h1 className=\"display-4 text-center\">Edit Profile</h1>\r\n              <small className=\"d-block pb-3\">* = required fields</small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"* Profile Handle\"\r\n                  name=\"handle\"\r\n                  value={this.state.handle}\r\n                  onChange={this.onChange}\r\n                  error={errors.handle}\r\n                  info=\"A unique handle for your profile URL. Your full name, company name, nickname\"\r\n                />\r\n                <SelectListGroup\r\n                  placeholder=\"Status\"\r\n                  name=\"status\"\r\n                  value={this.state.status}\r\n                  onChange={this.onChange}\r\n                  options={options}\r\n                  error={errors.status}\r\n                  info=\"Give us an idea of where you are at in your career\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Company\"\r\n                  name=\"company\"\r\n                  value={this.state.company}\r\n                  onChange={this.onChange}\r\n                  error={errors.company}\r\n                  info=\"Could be your own company or one you work for\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Website\"\r\n                  name=\"website\"\r\n                  value={this.state.website}\r\n                  onChange={this.onChange}\r\n                  error={errors.website}\r\n                  info=\"Could be your own website or a company one\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Location\"\r\n                  name=\"location\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChange}\r\n                  error={errors.location}\r\n                  info=\"City or city & state suggested (eg. Boston, MA)\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"* Skills\"\r\n                  name=\"skills\"\r\n                  value={this.state.skills}\r\n                  onChange={this.onChange}\r\n                  error={errors.skills}\r\n                  info=\"Please use comma separated values (eg.\r\n                    HTML,CSS,JavaScript,PHP\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Github Username\"\r\n                  name=\"githubusername\"\r\n                  value={this.state.githubusername}\r\n                  onChange={this.onChange}\r\n                  error={errors.githubusername}\r\n                  info=\"If you want your latest repos and a Github link, include your username\"\r\n                />\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"Short Bio\"\r\n                  name=\"bio\"\r\n                  value={this.state.bio}\r\n                  onChange={this.onChange}\r\n                  error={errors.bio}\r\n                  info=\"Tell us a little about yourself\"\r\n                />\r\n\r\n                <div className=\"mb-3\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      this.setState(prevState => ({\r\n                        displaySocialInputs: !prevState.displaySocialInputs\r\n                      }));\r\n                    }}\r\n                    className=\"btn btn-light\"\r\n                  >\r\n                    Add Social Network Links\r\n                  </button>\r\n                  <span className=\"text-muted\">Optional</span>\r\n                </div>\r\n                {socialInputs}\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(CreateProfile)\r\n);\r\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  label,\r\n  error,\r\n  info,\r\n  type,\r\n  onChange,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.string\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextFieldGroup;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextAreaFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  info,\r\n  onChange\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextAreaFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TextAreaFieldGroup;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InputGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  icon,\r\n  type,\r\n  onChange\r\n}) => {\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\">\r\n          <i className={icon} />\r\n        </span>\r\n      </div>\r\n      <input\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default InputGroup;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SelectListGroup = ({ name, value, error, info, onChange, options }) => {\r\n  const selectOptions = options.map(option => (\r\n    <option key={option.label} value={option.value}>\r\n      {option.label}\r\n    </option>\r\n  ));\r\n  return (\r\n    <div className=\"form-group\">\r\n      <select\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      >\r\n        {selectOptions}\r\n      </select>\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectListGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  options: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SelectListGroup;\r\n"],"sourceRoot":""}