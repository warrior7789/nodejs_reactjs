{"version":3,"sources":["../node_modules/classnames/index.js","components/common/TextFieldGroup.js","components/auth/Register.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","TextFieldGroup","name","placeholder","value","error","label","info","type","onChange","disabled","className","classnames","defaultProps","Register","state","email","password","cpassword","errors","bind","onSubmit","this","props","auth","isAuthenticated","history","nextProps","setState","e","target","preventDefault","newUser","registerUser","noValidate","Component","connect","withRouter"],"mappings":";qFAAA,OAOC,WACA,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC5C,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,QAER,GAAgB,WAAZJ,EACV,IAAK,IAAIM,KAAOP,EACXP,EAAOe,KAAKR,EAAKO,IAAQP,EAAIO,IAChCX,EAAQM,KAAKK,IAMjB,OAAOX,EAAQa,KAAK,KAGgBC,EAAOC,SAC3ChB,EAAWiB,QAAUjB,EACrBe,EAAOC,QAAUhB,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aAtCP,I,gCCPD,qCAIMkB,EAAiB,SAAC,GAUjB,IATLC,EASI,EATJA,KACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,MAEAC,GAKI,EANJC,MAMI,EALJD,OACAE,EAII,EAJJA,KACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,OACE,yBAAKC,UAAU,cACb,2BACEH,KAAMA,EACNG,UAAWC,IAAW,+BAAgC,CACpD,aAAcP,IAEhBF,YAAaA,EACbD,KAAMA,EACNE,MAAOA,EACPK,SAAUA,EACVC,SAAUA,IAEXH,GAAQ,2BAAOI,UAAU,wBAAwBJ,GACjDF,GAAS,yBAAKM,UAAU,oBAAoBN,KAgBnDJ,EAAeY,aAAe,CAC5BL,KAAM,QAGOP,O,mJC1CTa,E,YACJ,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXb,KAAM,GACNc,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,OAAQ,IAGV,EAAKV,SAAW,EAAKA,SAASW,KAAd,gBAChB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAXJ,E,iFAeRE,KAAKC,MAAMC,KAAKC,iBAClBH,KAAKC,MAAMG,QAAQpC,KAAK,gB,gDAIFqC,GACpBA,EAAUR,QACZG,KAAKM,SAAS,CAAET,OAAQQ,EAAUR,W,+BAI7BU,GACPP,KAAKM,SAAL,eAAiBC,EAAEC,OAAO5B,KAAO2B,EAAEC,OAAO1B,U,+BAGnCyB,GACPA,EAAEE,iBAEF,IAAMC,EAAU,CACd9B,KAAMoB,KAAKP,MAAMb,KACjBc,MAAOM,KAAKP,MAAMC,MAClBC,SAAUK,KAAKP,MAAME,SACrBC,UAAWI,KAAKP,MAAMG,WAGxBI,KAAKC,MAAMU,aAAaD,EAASV,KAAKC,MAAMG,W,+BAGpC,IACAP,EAAWG,KAAKP,MAAhBI,OAER,OACE,yBAAKR,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,WACA,uBAAGA,UAAU,oBAAb,oCAGA,0BAAMuB,YAAU,EAACb,SAAUC,KAAKD,UAC9B,kBAAC,IAAD,CACElB,YAAY,OACZD,KAAK,OACLE,MAAOkB,KAAKP,MAAMb,KAClBO,SAAUa,KAAKb,SACfJ,MAAOc,EAAOjB,OAEhB,kBAAC,IAAD,CACEC,YAAY,QACZD,KAAK,QACLM,KAAK,QACLJ,MAAOkB,KAAKP,MAAMC,MAClBP,SAAUa,KAAKb,SACfJ,MAAOc,EAAOH,MACdT,KAAK,iFAEP,kBAAC,IAAD,CACEJ,YAAY,WACZD,KAAK,WACLM,KAAK,WACLJ,MAAOkB,KAAKP,MAAME,SAClBR,SAAUa,KAAKb,SACfJ,MAAOc,EAAOF,WAEhB,kBAAC,IAAD,CACEd,YAAY,mBACZD,KAAK,YACLM,KAAK,WACLJ,MAAOkB,KAAKP,MAAMG,UAClBT,SAAUa,KAAKb,SACfJ,MAAOc,EAAOD,YAEhB,2BAAOV,KAAK,SAASG,UAAU,yC,GAzFxBwB,aA8GRC,uBALS,SAAArB,GAAK,MAAK,CAChCS,KAAMT,EAAMS,KACZL,OAAQJ,EAAMI,UAGwB,CAAEc,kBAA3BG,CAA2CC,YAAWvB","file":"static/js/11.c3efd125.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  label,\r\n  error,\r\n  info,\r\n  type,\r\n  onChange,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.string\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextFieldGroup;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      cpassword: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      cpassword: this.state.cpassword\r\n    };\r\n\r\n    this.props.registerUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">\r\n                Create your DevConnector account\r\n              </p>\r\n              <form noValidate onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"Name\"\r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.onChange}\r\n                  error={errors.name}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                  info=\"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                  error={errors.password}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Confirm Password\"\r\n                  name=\"cpassword\"\r\n                  type=\"password\"\r\n                  value={this.state.cpassword}\r\n                  onChange={this.onChange}\r\n                  error={errors.cpassword}\r\n                />\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n"],"sourceRoot":""}