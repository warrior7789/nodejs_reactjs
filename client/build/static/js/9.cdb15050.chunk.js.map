{"version":3,"sources":["components/add-credentials/AddExperience.js","../node_modules/classnames/index.js","components/common/TextFieldGroup.js","components/common/TextAreaFieldGroup.js"],"names":["AddExperience","props","state","company","title","location","from","to","current","description","errors","disabled","onChange","bind","onSubmit","onCheck","nextProps","this","setState","e","preventDefault","expData","addExperience","history","target","name","value","className","placeholder","error","type","checked","id","htmlFor","info","Component","connect","profile","withRouter","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","TextFieldGroup","label","classnames","defaultProps","TextAreaFieldGroup"],"mappings":"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","file":"static/js/9.cdb15050.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\nimport TextAreaFieldGroup from \"../common/TextAreaFieldGroup\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addExperience } from \"../../actions/profileActions\";\r\n\r\nclass AddExperience extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      company: \"\",\r\n      title: \"\",\r\n      location: \"\",\r\n      from: \"\",\r\n      to: \"\",\r\n      current: false,\r\n      description: \"\",\r\n      errors: {},\r\n      disabled: false\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onCheck = this.onCheck.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const expData = {\r\n      company: this.state.company,\r\n      title: this.state.title,\r\n      location: this.state.location,\r\n      from: this.state.from,\r\n      to: this.state.to,\r\n      current: this.state.current,\r\n      description: this.state.description\r\n    };\r\n\r\n    this.props.addExperience(expData, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onCheck(e) {\r\n    this.setState({\r\n      disabled: !this.state.disabled,\r\n      current: !this.state.current\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-experience\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/dashboard\" className=\"btn btn-light\">\r\n                Go Back\r\n              </Link>\r\n              <h1 className=\"display-4 text-center\">Add Experience</h1>\r\n              <p className=\"lead text-center\">\r\n                Add any job or position that you have had in the past or current\r\n              </p>\r\n              <small className=\"d-block pb-3\">* = required fields</small>\r\n              <form onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"* Company\"\r\n                  name=\"company\"\r\n                  value={this.state.company}\r\n                  onChange={this.onChange}\r\n                  error={errors.company}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"* Job Title\"\r\n                  name=\"title\"\r\n                  value={this.state.title}\r\n                  onChange={this.onChange}\r\n                  error={errors.title}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Location\"\r\n                  name=\"location\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChange}\r\n                  error={errors.location}\r\n                />\r\n                <h6>From Date</h6>\r\n                <TextFieldGroup\r\n                  name=\"from\"\r\n                  type=\"date\"\r\n                  value={this.state.from}\r\n                  onChange={this.onChange}\r\n                  error={errors.from}\r\n                />\r\n                <h6>To Date</h6>\r\n                <TextFieldGroup\r\n                  name=\"to\"\r\n                  type=\"date\"\r\n                  value={this.state.to}\r\n                  onChange={this.onChange}\r\n                  error={errors.to}\r\n                  disabled={this.state.disabled ? \"disabled\" : \"\"}\r\n                />\r\n                <div className=\"form-check mb-4\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    name=\"current\"\r\n                    value={this.state.current}\r\n                    checked={this.state.current}\r\n                    onChange={this.onCheck}\r\n                    id=\"current\"\r\n                  />\r\n                  <label htmlFor=\"current\" className=\"form-check-label\">\r\n                    Current Job\r\n                  </label>\r\n                </div>\r\n                <TextAreaFieldGroup\r\n                  placeholder=\"Job Description\"\r\n                  name=\"description\"\r\n                  value={this.state.description}\r\n                  onChange={this.onChange}\r\n                  error={errors.description}\r\n                  info=\"Tell us about the the position\"\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  className=\"btn btn-info btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addExperience })(\r\n  withRouter(AddExperience)\r\n);\r\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  label,\r\n  error,\r\n  info,\r\n  type,\r\n  onChange,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.string\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextFieldGroup;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextAreaFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  info,\r\n  onChange\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextAreaFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TextAreaFieldGroup;\r\n"],"sourceRoot":""}